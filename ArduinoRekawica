#include <Wire.h>
#include <VirtualWire.h>
#include <ADXL345.h>
#include <bma180.h>
#include <HMC58X3.h>
#include <ITG3200.h>
#include <MS561101BA.h>
#include <I2Cdev.h>
#include <MPU60X0.h>
#include <EEPROM.h>
#include "DebugUtils.h"
#include "CommunicationUtils.h"
#include "FreeIMU.h"
#include <Wire.h>
#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>
const int flexPin0 = A0; //pin A0 to read analog input
const int flexPin1 = A1;
const int flexPin2 = A2;
const int flexPin3 = A3;
const int flexPin4 = A6;
RF24 radio(10, 9);  // CE, CSN
unsigned long timer = 0;
float timeStep = 0.01;
String wiadomosc="";
String wiadomosc1="";
String wiadomosc2="";
String wiadomosc3="";

float elapsedTime, currentTime, previousTime;
int c = 0;
float q[4];
int raw_values[9];
float ypr[3]; // yaw pitch roll
char str[256];
float val[9];
String wynik;
const byte address[6] = "00001";
// Set the FreeIMU object
FreeIMU my3IMU = FreeIMU();
//The command from the PC
char cmd;
void setup(){


Serial.begin(115200);
Wire.begin();
  my3IMU.init(true);
  
  // LED
  pinMode(13, OUTPUT);

  delay(20);
  radio.begin();
  
  //set the address
  radio.openWritingPipe(address);
  
  //Set module as transmitter
  radio.stopListening();
}

void loop(){


 my3IMU.getQ(q);
 serialPrintFloatArr(q, 4);
       
 String str0 = String(analogRead(flexPin0), HEX);
 String str1 = String(analogRead(flexPin1), HEX);
 String str2 = String(analogRead(flexPin2), HEX);
 String str3 = String(analogRead(flexPin3), HEX);
 String str4 = String(analogRead(flexPin4), HEX);
 wiadomosc=wynik; 
 //wiadomosc=wynik;
 //Serial.println(wiadomosc.substring(0, 16) +" "+wiadomosc.substring(16, 32));
 wiadomosc1="!"+wiadomosc.substring(0, 16);
 wiadomosc2="@"+wiadomosc.substring(16, 32);
  wiadomosc3="#"+str0+ str1 + str2+str3+str4;
  Serial.println(String(analogRead(flexPin0))+" "+String(analogRead(flexPin1))+" "+String(analogRead(flexPin2))+" "+String(analogRead(flexPin3))+" "+String(analogRead(flexPin4)));
 char text[32];
 wiadomosc1.toCharArray(text,32);
  radio.write(&text, sizeof(text));
  delay(10);
  wiadomosc2.toCharArray(text,32);
  radio.write(&text, sizeof(text));
  delay(10);
 wiadomosc3.toCharArray(text,32);
  radio.write(&text, sizeof(text));
     delay(10);
  wynik="";
}
char serial_busy_wait() {
  while(!Serial.available()) {
    ; // do nothing until ready
  }
  return Serial.read();
}

const int EEPROM_MIN_ADDR = 0;
const int EEPROM_MAX_ADDR = 511;

void eeprom_serial_dump_column() {
  // counter
  int i;

  // byte read from eeprom
  byte b;

  // buffer used by sprintf
  char buf[10];

  for (i = EEPROM_MIN_ADDR; i <= EEPROM_MAX_ADDR; i++) {
    b = EEPROM.read(i);
    sprintf(buf, "%03X: %02X", i, b);
    Serial.println(buf);
  }
}
void serialPrintFloatArr(float * arr, int length) {
  for(int i=0; i<length; i++) {
    serialFloatPrint(arr[i]);
  }
}


void serialFloatPrint(float f) {
  byte * b = (byte *) &f;
  for(int i=0; i<4; i++) {
    
    byte b1 = (b[i] >> 4) & 0x0f;
    byte b2 = (b[i] & 0x0f);
    
    char c1 = (b1 < 10) ? ('0' + b1) : 'A' + b1 - 10;
    char c2 = (b2 < 10) ? ('0' + b2) : 'A' + b2 - 10;
    wynik=wynik+c1+c2;
  }
}
